{"version":3,"sources":["Components/Circle/Circle.js","Components/GameOver/GameOver.js","App.js","index.js"],"names":["Circle","props","className","img","active","onClick","click","closeHandler","window","location","reload","GameOver","score","getRndInteger","min","max","Math","floor","random","App","state","current","showGameOver","rounds","circles","id","pace","timer","undefined","clickHandler","console","log","playAudio","stopHandler","setState","sound","Audio","play","nextCircle","nextActive","setTimeout","startHandler","clearTimeout","this","map","item","Component","ReactDOM","render","document","getElementById"],"mappings":"6OAOeA,G,MAJA,SAACC,GACZ,OAAO,qBAAKC,UAAS,iBAAYD,EAAME,IAAlB,YAAyBF,EAAMG,OAAS,UAAY,IAAMC,QAASJ,EAAMK,UCD5FC,G,MAAe,WACjBC,OAAOC,SAASC,WAeLC,EAZE,SAACV,GACd,OACI,qBAAKC,UAAU,UAAf,SACI,sBAAKA,UAAU,eAAf,UACI,2CACA,2CAAcD,EAAMW,MAApB,YACJ,wBAAQP,QAASE,EAAjB,yBCTNM,EAAgB,SAACC,EAAKC,GAC1B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,GAmGxCK,E,4MA/FbC,MAAQ,CACNR,MAAO,EACPS,QAAS,EACTC,cAAc,EACdC,OAAQ,EACRC,QAAS,CACP,CAAEC,GAAI,EAAGtB,IAAK,SACd,CAAEsB,GAAI,EAAGtB,IAAK,SACd,CAAEsB,GAAI,EAAGtB,IAAK,SACd,CAAEsB,GAAI,EAAGtB,IAAK,W,EAIlBuB,KAAO,K,EACPC,WAAQC,E,EAERC,aAAe,SAACJ,GAId,GAHAK,QAAQC,IAAI,OAASN,GACrB,EAAKO,UAAU,YAEX,EAAKZ,MAAMC,UAAYI,EAGzB,OAFA,EAAKO,UAAU,iBACf,EAAKC,cAIP,EAAKC,SAAS,CACZtB,MAAO,EAAKQ,MAAMR,MAAO,EACzBW,OAAQ,K,EAIZS,UAAY,SAACG,GACC,IAAIC,MAAJ,kBAAqBD,EAArB,SACNE,Q,EAGRC,WAAa,WAEX,GAAI,EAAKlB,MAAMG,QAAU,EACvB,EAAKU,kBADP,CAKA,IAAIM,OAAaX,EAEjB,GACEW,EAAa1B,EAAc,EAAG,SACvB0B,IAAe,EAAKnB,MAAMC,SAEnC,EAAKa,SAAU,CACbb,QAASkB,EACThB,OAAQ,EAAKH,MAAMG,OAAS,IAG9B,EAAKG,MAAQ,IACb,EAAKC,MAAQa,WAAW,EAAKF,WAAY,EAAKZ,MAE9CI,QAAQC,IAAI,oBAAsB,EAAKX,MAAMC,W,EAG/CoB,aAAe,WACb,EAAKH,c,EAGPL,YAAc,WACZS,aAAa,EAAKf,OAElB,EAAKO,SAAS,CAACZ,cAAc,K,uDAGrB,IAAD,OACLE,EAAUmB,KAAKvB,MAAMI,QAAQoB,KAAI,SAAAC,GACrC,OAAO,cAAC,EAAD,CAEP1C,IAAK0C,EAAK1C,IACVG,MAAO,kBAAM,EAAKuB,aAAagB,EAAKpB,KACpCrB,OAAS,EAAKgB,MAAMC,UAAYwB,EAAKpB,IAHhCoB,EAAKpB,OAMR,OACE,gCACE,2CACJ,yEAA4CkB,KAAKvB,MAAMR,MAAvD,aACI,8BACGY,IAEH,wBAAQnB,QAASsC,KAAKF,aAAtB,mBACA,wBAAQpC,QAASsC,KAAKV,YAAtB,kBACHU,KAAKvB,MAAME,cAAgB,cAAC,EAAD,CAAUV,MAAO+B,KAAKvB,MAAMR,e,GA1F1CkC,aCFlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e0c7379d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Circle.css';\r\n\r\nconst Circle = (props) => {\r\n    return <div className={`circle ${props.img} ${props.active ? \" active\" : \"\"}`} onClick={props.click}></div>;\r\n};\r\n\r\nexport default Circle;","import React from 'react';\r\nimport './GameOver.css';\r\n\r\nconst closeHandler = () => {\r\n    window.location.reload();\r\n}\r\n\r\nconst GameOver = (props) => {\r\n    return (\r\n        <div className=\"overlay\">  \r\n            <div className=\"gameover_box\">\r\n                <h2>Game over</h2>\r\n                <p>You drank {props.score} beers</p>\r\n            <button onClick={closeHandler}>Close</button>\r\n            </div>\r\n        </div>\r\n    );    \r\n};\r\n\r\nexport default GameOver;","import React, { Component } from 'react';\nimport Circle from './Components/Circle/Circle';\nimport GameOver from './Components/GameOver/GameOver';\n\nconst getRndInteger = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nclass App extends Component {\n  state = {\n    score: 0,\n    current: 0,\n    showGameOver: false,\n    rounds: 0,\n    circles: [\n      { id: 1, img: \"beer1\" },\n      { id: 2, img: \"beer2\" },\n      { id: 3, img: \"beer3\" },\n      { id: 4, img: \"beer4\" },\n    ],\n  };\n\n  pace = 1500;\n  timer = undefined;\n\n  clickHandler = (id) => {\n    console.log('wow ' + id);\n    this.playAudio('beerOpen');\n\n    if (this.state.current !== id) {\n      this.playAudio('gameOver');\n      this.stopHandler();\n      return;\n    }\n\n    this.setState({\n      score: this.state.score +1,\n      rounds: 0,\n    });\n  };\n\n  playAudio = (sound) => {\n    var audio = new Audio(`/assets/${sound}.wav`);\n    audio.play();\n  }\n\n  nextCircle = () => {\n\n    if (this.state.rounds >= 5){\n      this.stopHandler();\n      return;\n    }\n\n    let nextActive = undefined;\n\n    do {\n      nextActive = getRndInteger(1, 4);\n    } while (nextActive === this.state.current)\n\n    this.setState ({\n      current: nextActive,\n      rounds: this.state.rounds + 1,\n    });\n\n    this.pace *= 0.95;\n    this.timer = setTimeout(this.nextCircle, this.pace);\n\n    console.log('Active circle is:' , this.state.current);\n  };\n\n  startHandler = () => {\n    this.nextCircle();\n  }\n\n  stopHandler = () => {\n    clearTimeout(this.timer);\n\n    this.setState({showGameOver: true})\n  };\n\n  render() {\nconst circles = this.state.circles.map(item => {\n  return <Circle \n  key={item.id}\n  img={item.img} \n  click={() => this.clickHandler(item.id)}\n  active ={this.state.current === item.id} />;\n});\n\n    return (\n      <div>\n        <h1>Speedgame</h1>\n    <p>How many beers can you drink? You drank {this.state.score} beers!</p>\n        <div>\n          {circles}\n        </div>\n        <button onClick={this.startHandler}>Start</button>\n        <button onClick={this.stopHandler}>Stop</button>\n    {this.state.showGameOver && <GameOver score={this.state.score} /> }\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root')\n);"],"sourceRoot":""}